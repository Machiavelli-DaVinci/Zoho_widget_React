{"ast":null,"code":"export async function Plants() {\n  const handleScriptLoad = async () => {\n    console.log(\"hero\");\n    await window.ZOHO.CREATOR.init().then(function (data) {\n      // var queryParams = window.ZOHO.CREATOR.UTIL.getQueryParams();\n      const email = \"rapaka.chandrashekar@gmail.com\"; //Stage == \\\"Open\\\"\n      var config = {\n        appName: \"infinite-control-room\",\n        reportName: \"All_Users\",\n        criteria: \"Username ==\\\"rapaka.chandrashekar@gmail.com\\\"\",\n        page: \"1\",\n        pageSize: \"100\"\n      };\n\n      //get all records API\n      window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\n        //callback block\n        let userData = response;\n        console.log(\"userData\" + JSON.stringify(userData));\n      });\n    });\n    // console.log(window.ZC);\n  };\n\n  handleScriptLoad();\n  let accessToken = \"\";\n  try {\n    const loginResponse = await fetch(`https://api-idap.infinite-uptime.com/api/3.0/idap-api/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'accept': 'application/json'\n      },\n      body: JSON.stringify({\n        username: 'rapaka.chandrashekar@gmail.com',\n        password: 'chanduR00002@'\n      })\n    });\n    console.log(\"json.js called1\");\n    const loginData = await loginResponse.json();\n    accessToken = loginData.data.accessToken;\n    //console.log(loginData);\n\n    const plantsResponse = await fetch('https://api-idap.infinite-uptime.com/api/3.0/idap-api/plants/1868/machine-group-stats', {\n      method: 'GET',\n      headers: {\n        'accept': 'application/json',\n        'Authorization': 'Bearer ' + accessToken\n      }\n    });\n    const plantsData = await plantsResponse.json();\n    console.log(\"plantsdata\", plantsData);\n    return plantsData.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n_c = Plants;\nvar _c;\n$RefreshReg$(_c, \"Plants\");","map":{"version":3,"names":["Plants","handleScriptLoad","console","log","window","ZOHO","CREATOR","init","then","data","email","config","appName","reportName","criteria","page","pageSize","API","getAllRecords","response","userData","JSON","stringify","accessToken","loginResponse","fetch","method","headers","body","username","password","loginData","json","plantsResponse","plantsData","error","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/zoho-creator-widget-starter-template-reactJS/react_app/src/Services/Json.js"],"sourcesContent":["\r\nexport async function Plants() {\r\n  const handleScriptLoad = async() => {\r\n    console.log(\"hero\")\r\n    await window.ZOHO.CREATOR.init().then(function(data) {\r\n     // var queryParams = window.ZOHO.CREATOR.UTIL.getQueryParams();\r\n     const email=\"rapaka.chandrashekar@gmail.com\";//Stage == \\\"Open\\\"\r\n       var config = {\r\n        appName: \"infinite-control-room\",\r\n        reportName: \"All_Users\",\r\n        criteria: \"Username ==\\\"rapaka.chandrashekar@gmail.com\\\"\",\r\n        page: \"1\",\r\n        pageSize: \"100\"\r\n      }\r\n  \r\n      //get all records API\r\n      window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\r\n        //callback block\r\n        let userData = response;\r\n        console.log(\"userData\"+JSON.stringify(userData));\r\n        \r\n      });\r\n    });\r\n   // console.log(window.ZC);\r\n   \r\n  };\r\n  handleScriptLoad();\r\n    let accessToken = \"\";\r\n  \r\n    try {\r\n      const loginResponse = await fetch(`https://api-idap.infinite-uptime.com/api/3.0/idap-api/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type':'application/json',\r\n          'accept': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username: 'rapaka.chandrashekar@gmail.com',\r\n          password: 'chanduR00002@'\r\n        })\r\n      });\r\n      console.log(\"json.js called1\");\r\n  \r\n      const loginData = await loginResponse.json();\r\n      accessToken = loginData.data.accessToken;\r\n       //console.log(loginData);\r\n  \r\n      const plantsResponse = await fetch('https://api-idap.infinite-uptime.com/api/3.0/idap-api/plants/1868/machine-group-stats', {\r\n        method: 'GET',\r\n        headers: {\r\n          'accept': 'application/json',\r\n          'Authorization': 'Bearer ' + accessToken,\r\n        },\r\n      });\r\n  \r\n      const plantsData = await plantsResponse.json();\r\n       console.log(\"plantsdata\", plantsData);\r\n  \r\n      return plantsData.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw error;\r\n    }\r\n  }\r\n  "],"mappings":"AACA,OAAO,eAAeA,MAAMA,CAAA,EAAG;EAC7B,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAW;IAClCC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB,MAAMC,MAAM,CAACC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,UAASC,IAAI,EAAE;MACpD;MACA,MAAMC,KAAK,GAAC,gCAAgC,CAAC;MAC3C,IAAIC,MAAM,GAAG;QACZC,OAAO,EAAE,uBAAuB;QAChCC,UAAU,EAAE,WAAW;QACvBC,QAAQ,EAAE,+CAA+C;QACzDC,IAAI,EAAE,GAAG;QACTC,QAAQ,EAAE;MACZ,CAAC;;MAED;MACAZ,MAAM,CAACC,IAAI,CAACC,OAAO,CAACW,GAAG,CAACC,aAAa,CAACP,MAAM,CAAC,CAACH,IAAI,CAAC,UAAUW,QAAQ,EAAE;QACrE;QACA,IAAIC,QAAQ,GAAGD,QAAQ;QACvBjB,OAAO,CAACC,GAAG,CAAC,UAAU,GAACkB,IAAI,CAACC,SAAS,CAACF,QAAQ,CAAC,CAAC;MAElD,CAAC,CAAC;IACJ,CAAC,CAAC;IACH;EAED,CAAC;;EACDnB,gBAAgB,CAAC,CAAC;EAChB,IAAIsB,WAAW,GAAG,EAAE;EAEpB,IAAI;IACF,MAAMC,aAAa,GAAG,MAAMC,KAAK,CAAE,6DAA4D,EAAE;MAC/FC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAC,kBAAkB;QACjC,QAAQ,EAAE;MACZ,CAAC;MACDC,IAAI,EAAEP,IAAI,CAACC,SAAS,CAAC;QACnBO,QAAQ,EAAE,gCAAgC;QAC1CC,QAAQ,EAAE;MACZ,CAAC;IACH,CAAC,CAAC;IACF5B,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAE9B,MAAM4B,SAAS,GAAG,MAAMP,aAAa,CAACQ,IAAI,CAAC,CAAC;IAC5CT,WAAW,GAAGQ,SAAS,CAACtB,IAAI,CAACc,WAAW;IACvC;;IAED,MAAMU,cAAc,GAAG,MAAMR,KAAK,CAAC,uFAAuF,EAAE;MAC1HC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,QAAQ,EAAE,kBAAkB;QAC5B,eAAe,EAAE,SAAS,GAAGJ;MAC/B;IACF,CAAC,CAAC;IAEF,MAAMW,UAAU,GAAG,MAAMD,cAAc,CAACD,IAAI,CAAC,CAAC;IAC7C9B,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE+B,UAAU,CAAC;IAEtC,OAAOA,UAAU,CAACzB,IAAI;EACxB,CAAC,CAAC,OAAO0B,KAAK,EAAE;IACdjC,OAAO,CAACiC,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF;AAACC,EAAA,GA9DmBpC,MAAM;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}