{"ast":null,"code":"const apiUrl = 'https://api-idap.infinite-uptime.com/api/3.0/idap-api/login';\nfetch(apiUrl, {\n  method: 'POST',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    username: 'rapaka.chandrashekar@gmail.com',\n    password: 'chanduR00002@'\n  })\n}).then(response => response.json()).then(data => {\n  // Handle the response here\n  console.log(data);\n}).catch(error => {\n  // Handle any error that occurred\n  console.error(error);\n});\n\n// export async function Plants() {\n//     const username = encodeURIComponent('rapaka.chandrashekar@gmail.com');\n//     const password = encodeURIComponent('chanduR00002@');\n//     let accessToken = \"\";\n\n//     try {\n//       const loginResponse = await fetch(`https://api-idap.infinite-uptime.com/api/3.0/idap-api/login?username=${username}&password=${password}`, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type':'application/json',\n//           'accept': 'application/json',\n//         },\n//       });\n//       console.log(\"json.js called1\");\n\n//       const loginData = await loginResponse.json();\n//       accessToken = loginData.data.accessToken;\n//        console.log(loginData);\n\n//       const plantsResponse = await fetch('https://api-idap.infinite-uptime.com/api/3.0/idap-api/plants', {\n//         method: 'GET',\n//         headers: {\n//           'accept': '*/*',\n//           'Authorization': 'Bearer ' + accessToken,\n//         },\n//       });\n\n//       const plantsData = await plantsResponse.json();\n//     //   console.log(\"plantsdata\", plantsData);\n\n//       return plantsData.data;\n//     } catch (error) {\n//       console.error(error);\n//       throw error;\n//     }\n//   }","map":{"version":3,"names":["apiUrl","fetch","method","headers","body","JSON","stringify","username","password","then","response","json","data","console","log","catch","error"],"sources":["C:/Users/DELL/Desktop/zoho-creator-widget-starter-template-reactJS/react_app/src/Services/Json.js"],"sourcesContent":["\r\nconst apiUrl = 'https://api-idap.infinite-uptime.com/api/3.0/idap-api/login';\r\n\r\nfetch(apiUrl, {\r\n  method: 'POST',\r\n  headers: {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json'\r\n  },\r\n  body: JSON.stringify({\r\n    username: 'rapaka.chandrashekar@gmail.com',\r\n    password: 'chanduR00002@'\r\n  })\r\n})\r\n  .then(response => response.json())\r\n  .then(data => {\r\n    // Handle the response here\r\n    console.log(data);\r\n  })\r\n  .catch(error => {\r\n    // Handle any error that occurred\r\n    console.error(error);\r\n  });\r\n\r\n// export async function Plants() {\r\n//     const username = encodeURIComponent('rapaka.chandrashekar@gmail.com');\r\n//     const password = encodeURIComponent('chanduR00002@');\r\n//     let accessToken = \"\";\r\n  \r\n//     try {\r\n//       const loginResponse = await fetch(`https://api-idap.infinite-uptime.com/api/3.0/idap-api/login?username=${username}&password=${password}`, {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type':'application/json',\r\n//           'accept': 'application/json',\r\n//         },\r\n//       });\r\n//       console.log(\"json.js called1\");\r\n  \r\n//       const loginData = await loginResponse.json();\r\n//       accessToken = loginData.data.accessToken;\r\n//        console.log(loginData);\r\n  \r\n//       const plantsResponse = await fetch('https://api-idap.infinite-uptime.com/api/3.0/idap-api/plants', {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'accept': '*/*',\r\n//           'Authorization': 'Bearer ' + accessToken,\r\n//         },\r\n//       });\r\n  \r\n//       const plantsData = await plantsResponse.json();\r\n//     //   console.log(\"plantsdata\", plantsData);\r\n  \r\n//       return plantsData.data;\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       throw error;\r\n//     }\r\n//   }\r\n  "],"mappings":"AACA,MAAMA,MAAM,GAAG,6DAA6D;AAE5EC,KAAK,CAACD,MAAM,EAAE;EACZE,MAAM,EAAE,MAAM;EACdC,OAAO,EAAE;IACP,QAAQ,EAAE,kBAAkB;IAC5B,cAAc,EAAE;EAClB,CAAC;EACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;IACnBC,QAAQ,EAAE,gCAAgC;IAC1CC,QAAQ,EAAE;EACZ,CAAC;AACH,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;EACZ;EACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;AACnB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;EACd;EACAH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;AACtB,CAAC,CAAC;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}