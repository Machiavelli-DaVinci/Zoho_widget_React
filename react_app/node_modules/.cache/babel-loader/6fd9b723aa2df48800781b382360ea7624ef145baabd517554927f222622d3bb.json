{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\zoho-creator-widget-starter-template-reactJS\\\\react_app\\\\src\\\\index.js\";\nimport React from 'react';\nimport { useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst handleScriptLoad = async () => {\n  console.log(\"hero\");\n  await window.ZOHO.CREATOR.init().then(function (data) {\n    // var queryParams = window.ZOHO.CREATOR.UTIL.getQueryParams();\n    var config = {\n      appName: \"infinite-control-room\",\n      reportName: \"All_Machines\",\n      criteria: \"ID =\" + 166871000001252919,\n      page: \"1\",\n      pageSize: \"100\"\n    };\n\n    //get all records API\n    window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\n      //callback block\n      let machineData = response.data[0];\n      let machineName1 = machineData.Name;\n      let machineName = JSON.stringify(machineName1);\n      let observation = machineData.Observation;\n      let diagnostic = machineData.Diagnostic;\n      let recommendation = machineData.Recommendation;\n      console.log(\"mname\" + machineData);\n    });\n  });\n  // console.log(window.ZC);\n};\n\nhandleScriptLoad();\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","useEffect","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","handleScriptLoad","console","log","window","ZOHO","CREATOR","init","then","data","config","appName","reportName","criteria","page","pageSize","API","getAllRecords","response","machineData","machineName1","Name","machineName","JSON","stringify","observation","Observation","diagnostic","Diagnostic","recommendation","Recommendation","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/DELL/Desktop/zoho-creator-widget-starter-template-reactJS/react_app/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport {useEffect} from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst handleScriptLoad = async() => {\r\n  console.log(\"hero\")\r\n  await window.ZOHO.CREATOR.init().then(function(data) {\r\n   // var queryParams = window.ZOHO.CREATOR.UTIL.getQueryParams();\r\n     var config = {\r\n      appName: \"infinite-control-room\",\r\n      reportName: \"All_Machines\",\r\n      criteria: \"ID =\" + 166871000001252919,\r\n      page: \"1\",\r\n      pageSize: \"100\"\r\n    }\r\n\r\n    //get all records API\r\n    window.ZOHO.CREATOR.API.getAllRecords(config).then(function (response) {\r\n      //callback block\r\n      let machineData = response.data[0];\r\n      let machineName1 = machineData.Name;\r\n      let machineName = JSON.stringify(machineName1);\r\n      let observation = machineData.Observation;\r\n      let diagnostic = machineData.Diagnostic;\r\n      let recommendation = machineData.Recommendation;\r\n      console.log(\"mname\"+machineData);\r\n    });\r\n  });\r\n // console.log(window.ZC);\r\n \r\n};\r\nhandleScriptLoad();\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,QAAO,OAAO;AAC/B,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAW;EAClCC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACnB,MAAMC,MAAM,CAACC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,UAASC,IAAI,EAAE;IACpD;IACE,IAAIC,MAAM,GAAG;MACZC,OAAO,EAAE,uBAAuB;MAChCC,UAAU,EAAE,cAAc;MAC1BC,QAAQ,EAAE,MAAM,GAAG,kBAAkB;MACrCC,IAAI,EAAE,GAAG;MACTC,QAAQ,EAAE;IACZ,CAAC;;IAED;IACAX,MAAM,CAACC,IAAI,CAACC,OAAO,CAACU,GAAG,CAACC,aAAa,CAACP,MAAM,CAAC,CAACF,IAAI,CAAC,UAAUU,QAAQ,EAAE;MACrE;MACA,IAAIC,WAAW,GAAGD,QAAQ,CAACT,IAAI,CAAC,CAAC,CAAC;MAClC,IAAIW,YAAY,GAAGD,WAAW,CAACE,IAAI;MACnC,IAAIC,WAAW,GAAGC,IAAI,CAACC,SAAS,CAACJ,YAAY,CAAC;MAC9C,IAAIK,WAAW,GAAGN,WAAW,CAACO,WAAW;MACzC,IAAIC,UAAU,GAAGR,WAAW,CAACS,UAAU;MACvC,IAAIC,cAAc,GAAGV,WAAW,CAACW,cAAc;MAC/C5B,OAAO,CAACC,GAAG,CAAC,OAAO,GAACgB,WAAW,CAAC;IAClC,CAAC,CAAC;EACJ,CAAC,CAAC;EACH;AAED,CAAC;;AACDlB,gBAAgB,CAAC,CAAC;AAClB,MAAM8B,IAAI,GAAGnC,QAAQ,CAACoC,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTnC,OAAA,CAACN,KAAK,CAAC0C,UAAU;EAAAC,QAAA,eACfrC,OAAA,CAACH,GAAG;IAAAyC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;;AAED;AACA;AACA;AACA3C,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}