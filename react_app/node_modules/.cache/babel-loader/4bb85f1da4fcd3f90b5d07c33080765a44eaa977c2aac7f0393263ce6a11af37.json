{"ast":null,"code":"export async function Plants() {\n  const username = encodeURIComponent('rapaka.chandrashekar@gmail.com');\n  const password = encodeURIComponent('chanduR00002@');\n  const response = fetch(`https://api-idap.infinite-uptime.com/api/3.0/idap-api/login?username=${username}&password=${password}`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json'\n    }\n  }).then(response => response.json()).then(data => {\n    console.log(data);\n    if (data.status == \"success\") {\n      const accesstoken = data.accesstoken;\n      const response1 = fetch('https://api-idap.infinite-uptime.com/api/3.0/idap-api/plants', {\n        method: 'GET',\n        headers: {\n          \"accept\": \"*/*\",\n          \"Authorization\": \"Bearer \" + accesstoken\n        }\n      }).then(response1 => response1.json()).then(data => {\n        console.log(data);\n      });\n    }\n  }).catch(error => {\n    console.error(error);\n  });\n  return await response;\n}\n_c = Plants;\nvar _c;\n$RefreshReg$(_c, \"Plants\");","map":{"version":3,"names":["Plants","username","encodeURIComponent","password","response","fetch","method","headers","then","json","data","console","log","status","accesstoken","response1","catch","error","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/zoho-creator-widget-starter-template-reactJS/react_app/src/Services/Json.js"],"sourcesContent":["export async function Plants(){\r\n    const username = encodeURIComponent('rapaka.chandrashekar@gmail.com');\r\n    const password = encodeURIComponent('chanduR00002@');\r\n    \r\n   const response= fetch(`https://api-idap.infinite-uptime.com/api/3.0/idap-api/login?username=${username}&password=${password}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n      },\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n      console.log(data)\r\n      if(data.status == \"success\"){\r\n        const accesstoken=data.accesstoken;\r\n        const response1=fetch('https://api-idap.infinite-uptime.com/api/3.0/idap-api/plants',{\r\n            method: 'GET',\r\n            headers: {\"accept\":\"*/*\",\"Authorization\":\"Bearer \" + accesstoken}\r\n        }).then(response1=>response1.json()).then(data=>{\r\n           console.log(data);} )\r\n           \r\n        }\r\n      })\r\n      .catch(error => {\r\n        \r\n        console.error(error);\r\n      });\r\n    \r\n    \r\n    return await response;\r\n}"],"mappings":"AAAA,OAAO,eAAeA,MAAMA,CAAA,EAAE;EAC1B,MAAMC,QAAQ,GAAGC,kBAAkB,CAAC,gCAAgC,CAAC;EACrE,MAAMC,QAAQ,GAAGD,kBAAkB,CAAC,eAAe,CAAC;EAErD,MAAME,QAAQ,GAAEC,KAAK,CAAE,wEAAuEJ,QAAS,aAAYE,QAAS,EAAC,EAAE;IAC5HG,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE;IACZ;EACF,CAAC,CAAC,CACCC,IAAI,CAACJ,QAAQ,IAAIA,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CACjCD,IAAI,CAACE,IAAI,IAAI;IACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,IAAGA,IAAI,CAACG,MAAM,IAAI,SAAS,EAAC;MAC1B,MAAMC,WAAW,GAACJ,IAAI,CAACI,WAAW;MAClC,MAAMC,SAAS,GAACV,KAAK,CAAC,8DAA8D,EAAC;QACjFC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAC,QAAQ,EAAC,KAAK;UAAC,eAAe,EAAC,SAAS,GAAGO;QAAW;MACpE,CAAC,CAAC,CAACN,IAAI,CAACO,SAAS,IAAEA,SAAS,CAACN,IAAI,CAAC,CAAC,CAAC,CAACD,IAAI,CAACE,IAAI,IAAE;QAC7CC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAAC,CAAE,CAAC;IAExB;EACF,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;IAEdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;EACtB,CAAC,CAAC;EAGJ,OAAO,MAAMb,QAAQ;AACzB;AAACc,EAAA,GA9BqBlB,MAAM;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}